---
import Action from "@/components/Action.astro";

interface Props {
  data: {
    title: string;
    subTitle: string;
    primaryCta: {
      text: string;
      href: string;
      target?: string;
    };
    secondaryCta: {
      text: string;
      href: string;
      target?: string;
    };
    highlightedTitle?: string;
    showScrollButton?: boolean;
    scrollTarget?: string;
  };
}

const { data } = Astro.props;
const showScroll = data.showScrollButton ?? true;
const scrollTarget = data.scrollTarget || "#services-section";
---

<section id="hero-section" class="hero-section flex justify-center mt-48 h-screen">
  <div class="md:w-1/2">
    <h1 class="hero-title text-4xl text-center font-semibold md:text-6xl">
      {data.title}
      <span class="hero-highlight text-primary"> {data.highlightedTitle} </span>
    </h1>
    <h2 class="hero-subtitle mt-10 text-lg text-center opacity-80 md:text-2xl">
      {data.subTitle}
    </h2>
    <div class="flex justify-evenly mt-10">
      <Action
        as="a"
        type="button"
        class="hero-cta-primary bg-black text-white"
        href={data.primaryCta.href}
        target={data.primaryCta.target}
      >
        {data.primaryCta.text}
      </Action>
      <Action
        as="a"
        class="hero-cta-secondary bg-transparent text-black border border-black"
        type="button"
        href={data.secondaryCta.href}
        target={data.secondaryCta.target}
      >
        {data.secondaryCta.text}
      </Action>
    </div>
    {showScroll && (
    <div class="flex justify-center">
      <Action
        as="a"
        class="flex justify-center items-center animate-bounce border-2 border-transparent bg-primary text-white rounded-full w-14 h-14 mt-32 hover:bg-white hover:text-primary hover:border-primary transition"
        href={scrollTarget}
        title="arrow down icon"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-8 h-8"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M19.5 13.5 12 21m0 0-7.5-7.5M12 21V3"></path>
        </svg>
      </Action>
    </div>
    )}
  </div>
</section>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  #hero-section {
    opacity: 0;
    animation: fadeIn 0.8s ease-in-out forwards;
  }

  /* Theme-aware styling using CSS custom properties */
  .hero-section {
    color: var(--theme-text, inherit);
  }

  .hero-title {
    color: var(--theme-text, inherit);
  }

  .hero-subtitle {
    color: var(--theme-text-secondary, inherit);
  }

  .hero-highlight {
    color: var(--theme-accent, #1D4ED8);
  }

  /* Theme-aware CTA buttons */
  .hero-cta-primary {
    background-color: var(--theme-accent, #161925);
    color: var(--theme-bg, #FFFFFF);
  }

  .hero-cta-primary:hover {
    background-color: var(--theme-accent-hover, #1E40AF);
  }

  .hero-cta-secondary {
    background-color: transparent;
    color: var(--theme-text, #161925);
    border-color: var(--theme-border, #161925);
  }

  .hero-cta-secondary:hover {
    background-color: var(--theme-text, #161925);
    color: var(--theme-bg, #FFFFFF);
  }
</style>
